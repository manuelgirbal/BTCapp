html_text() %>%
strsplit(" ") %>%
purrr::keep(~(str_detect(.x, "-"))) %>%
map(~ .[1])
txs %>%
html_text() %>%
strsplit(" ")
library(tidyverse)
library(rvest)
# Reading "Blockchair Database Dumps" historic bitcoin transactions table:
blockchair <- read_html("https://gz.blockchair.com/bitcoin/transactions/")
# Selecting xpath of the transactions table:
txs <- blockchair %>%
html_element(xpath = "/html/body/pre")
txs
txs %>%
html_text()
txs %>%
html_text() %>%
strsplit(" ")
txs_data <- txs %>%
html_text() %>%
strsplit(" ")
txs_data
class(txs_data)
txs %>%
html_text()
txs %>%
html_text() %>%
strsplit(" ")
txs %>%
html_text() %>%
strsplit(" ") %>%
unlist()
txs_data <- txs %>%
html_text() %>%
strsplit(" ") %>%
unlist() %>%
keep(grepl("-", .))
txs_data
txs %>%
html_text() %>%
strsplit(" ") %>%
unlist() %>%
keep(grepl("-", .)) %>%
as_tibble()
)) %>%
txs_data <- txs %>%
html_text() %>%
strsplit(" ") %>%
unlist() %>%
keep(grepl("-", .)) %>%
as_tibble()
View(txs_data)
View(txs_data)
View(txs_data)
View(txs_data)
txs_data
# Reading "Blockchair Database Dumps" historic bitcoin transactions table:
blockchair <- read_html("https://gz.blockchair.com/bitcoin/transactions/")
txs <- blockchair %>%
html_element(xpath = "/html/body/pre")
txs
# Selecting xpath of the transactions table:
txs <- blockchair %>%
html_element(xpath = "/html/body/pre") %>%
html_text() %>%
strsplit(" ") %>%
unlist() %>%
keep(grepl("-", .)) %>%
as_tibble()
txs
View(blockchair)
blockchair %>%
html_element(xpath = "/html/body/pre")
blockchair
library(tidyverse)
library(rvest)
# Reading "Blockchair Database Dumps" historic bitcoin transactions table:
blockchair <- read_html("https://gz.blockchair.com/bitcoin/transactions/")
# Selecting xpath of the transactions table:
txs <- blockchair %>%
html_element(xpath = "/html/body/pre") %>%
html_text() %>%
strsplit(" ") %>%
unlist() %>%
keep(grepl("-", .)) %>%
as_tibble()
txs
blockchair %>%
html_element(xpath = "/html/body/pre") %>%
html_text() %>%
strsplit(" ") %>%
unlist() %>%
keep(grepl("-", .)) %>%
as_tibble() %>%
transmute(date = as_date(value))
blockchair %>%
html_element(xpath = "/html/body/pre") %>%
html_text() %>%
strsplit(" ") %>%
unlist() %>%
keep(grepl("-", .)) %>%
as_tibble() %>%
transmute(date = as_date("value"))
blockchair %>%
html_element(xpath = "/html/body/pre") %>%
html_text() %>%
strsplit(" ") %>%
unlist() %>%
keep(grepl("-", .)) %>%
as_tibble() %>%
transmute(value = as_date("value"))
txs
# Selecting xpath of the transactions table:
txs <- blockchair %>%
html_element(xpath = "/html/body/pre") %>%
html_text() %>%
strsplit(" ") %>%
unlist() %>%
keep(grepl("-", .)) %>%
as_tibble() %>%
txs %>%  transmute(value = as_date(value))
# Selecting xpath of the transactions table:
txs <- blockchair %>%
html_element(xpath = "/html/body/pre") %>%
html_text() %>%
strsplit(" ") %>%
unlist() %>%
keep(grepl("-", .)) %>%
as_tibble() %>%
txs %>%
transmute(value = as_date(value))
txs %>%
transmute(value = as_date(value))
txs %>%
transmute(value = as.Date(value))
txs
txs %>% arrange(desc())
txs %>% arrange(desc(value))
?as_date
# Selecting xpath of the transactions table:
txs <- blockchair %>%
html_element(xpath = "/html/body/pre") %>%
html_text() %>%
strsplit(" ") %>%
unlist() %>%
keep(grepl("-", .)) %>%
as_tibble()
library(tidyverse)
library(rvest)
library(lubridate)
# Reading "Blockchair Database Dumps" historic bitcoin transactions table:
blockchair <- read_html("https://gz.blockchair.com/bitcoin/transactions/")
# Selecting xpath of the transactions table:
txs <- blockchair %>%
html_element(xpath = "/html/body/pre") %>%
html_text() %>%
strsplit(" ") %>%
unlist() %>%
keep(grepl("-", .)) %>%
as_tibble()
View(txs)
blockchair %>%
html_element(xpath = "/html/body/pre") %>%
html_text() %>%
strsplit(" ")
blockchair %>%
html_element(xpath = "/html/body/pre") %>%
html_text()
blockchair %>%
html_element(xpath = "/html/body/pre")
# Selecting xpath of the transactions table:
txs <- blockchair %>%
html_element(xpath = "/html/body/pre") %>%
html_text()
txs
# Using regex to extract date and the last number
date <- sub(".*\\s(\\d{2}-\\w{3}-\\d{4}).*", "\\1", txs)
date
date
# Using regex to extract date and the last number
dates <- sub(".*\\s(\\d{2}-\\w{3}-\\d{4}).*", "\\1", txs)
library(stringr)
# Selecting xpath of the transactions table:
txs <- blockchair %>%
html_element(xpath = "/html/body/pre") %>%
html_text()
# Using regex to extract date and the last number
dates <- str_extract(txs, "\\d{2}-\\w{3}-\\d{4}")
dates
blockchair %>%
html_element(xpath = "/html/body/pre") %>%
html_children()
# Selecting xpath of the transactions table:
tx_nodes <- blockchair %>%
html_element(xpath = "/html/body/pre") %>%
html_children()  # Split the node into individual lines
View(tx_nodes)
# Using regex to extract date and the last number for each line
dates <- str_extract(xml_text(tx_nodes), "\\d{2}-\\w{3}-\\d{4}")
?xml_text
library(xml2)
# Using regex to extract date and the last number for each line
dates <- str_extract(xml_text(tx_nodes), "\\d{2}-\\w{3}-\\d{4}")
dates
tx_nodes[2]
x=tx_nodes[2]
x
View(x)
xml_attrs(x[[1]])
# Reading "Blockchair Database Dumps" historic bitcoin transactions table:
blockchair <- read_html("https://gz.blockchair.com/bitcoin/transactions/")
# Selecting xpath of the transactions table:
tx_nodes <- blockchair %>%
html_nodes(xpath = "/html/body/pre/a")  # Selecting only the anchor nodes with dates
# Extracting dates and last numbers
dates <- tx_nodes %>%
html_text() %>%
str_extract("\\d{2}-\\w{3}-\\d{4}")
last_numbers <- tx_nodes %>%
html_text() %>%
str_extract("\\d+$")
dates
tx_nodes
# Reading "Blockchair Database Dumps" historic bitcoin transactions table:
blockchair <- read_html("https://gz.blockchair.com/bitcoin/transactions/")
# Selecting xpath of the transactions table:
tx_nodes <- blockchair %>%
html_nodes(xpath = "/html/body/pre")  # Selecting the pre element containing the text
# Extracting dates and last numbers
lines <- tx_nodes %>%
xml_text()
dates <- str_extract(lines, "\\d{2}-\\w{3}-\\d{4}")
last_numbers <- str_extract(lines, "\\d+$")
# Combine the extracted data into a data frame
extracted_data <- data.frame(date = dates, last_number = last_numbers)
extacted_data
extracted_data
# Selecting xpath of the transactions table:
tx_nodes <- blockchair %>%
html_nodes(xpath = "/html/body/pre")  # Selecting the pre element containing the text
# Extracting dates and last numbers
lines <- tx_nodes %>%
xml_text()
lines
# Selecting xpath of the transactions table:
tx_nodes <- blockchair %>%
html_element(xpath = "/html/body/pre") %>%
html_text()%>%
strsplit(" ")
tx_nodes
blockchair %>%
html_element(xpath = "/html/body/pre") %>%
html_text()%>%
# strsplit(" ")
strsplit(lines, "[[:space:]\r\n]+")
blockchair %>%
html_element(xpath = "/html/body/pre") %>%
html_text()%>%
strsplit("    ")
blockchair %>%
html_element(xpath = "/html/body/pre") %>%
html_text()%>%
# strsplit("    ")
strsplit(lines, "[[:space:]\r\n]+")
blockchair %>%
html_element(xpath = "/html/body/pre") %>%
html_text()%>%
# strsplit("    ")
strsplit("\n")
# Selecting xpath of the transactions table:
tx_nodes <- blockchair %>%
html_element(xpath = "/html/body/pre") %>%
html_text()%>%
strsplit("\n")
tx_nodes
# Function to extract date (without time) and number from each line
extract_info <- function(line) {
parts <- strsplit(line, "\\s+")[[1]]
date <- parts[2]
numeric_value <- as.numeric(sub("\\D", "", parts[3]))
return(data.frame(date = date, numeric_value = numeric_value))
}
# Extracting date (without time) and number from each line and combining them into a data frame
extracted_data <- do.call(rbind, lapply(lines[[1]], extract_info))
extracted_data
# Reading "Blockchair Database Dumps" historic bitcoin transactions table:
blockchair <- read_html("https://gz.blockchair.com/bitcoin/transactions/")
# Selecting xpath of the transactions table:
tx_nodes <- blockchair %>%
html_element(xpath = "/html/body/pre") %>%
html_text()%>%
strsplit("\n")
tx_nodes
class(tx_nodes)
# Selecting xpath of the transactions table:
txs_list <- blockchair %>%
html_element(xpath = "/html/body/pre") %>%
html_text()%>%
strsplit("\n")
txs_list
length(txs_list)
txs_list %>%   strsplit("    ")
library(tidyverse)
library(rvest)
library(stringr)
# Reading "Blockchair Database Dumps" historic bitcoin transactions table:
blockchair <- read_html("https://gz.blockchair.com/bitcoin/transactions/")
# Selecting xpath of the transactions table:
txs_list <- blockchair %>%
html_element(xpath = "/html/body/pre") %>%
html_text()%>%
strsplit("\n")
txs_list
?strsplit
blockchair %>%
html_element(xpath = "/html/body/pre") %>%
html_text()%>%
strsplit("\n", " ")
txs_list %>% strsplit(" ")
txs_list %>% strsplit("")
txs_list %>% strsplit("\\s+")
txs_list %>% strsplit("n")
txs_list %>% strsplit("\n")
scan(txs_list, "")
class(txs_list)
as_tibble(txs_list)
data_frame(txs_list)
tibble(txs_list)
df <- data.frame(a = txs_list)
df
df <- tibble(a = txs_list)
df
?tibble
df <- tibble(a = t(txs_list))
df
df <- data.frame(a = txs_list)
df %>%
strsplit(a, " ")
View(df)
# Creating the data frame:
df <- data.frame('a' = txs_list)
df
View(df)
txs_list
txs_list[1]
txs_list[2]
txs_list[[1]]
txs_list(1)
summary(txs_list)
tibble() %>%
mutate(a = txs_list)
df <- tibble() %>%
mutate(a = txs_list)
df
# Creating the data frame:
df <- tibble() %>%
add_column(a = txs_list)
df
View(df)
# Creating the data frame:
df <- tibble() %>%
add_row(a = txs_list)
# Creating the data frame:
df <- tibble(a = txs_list) %>%
unnest(a)
df
df %>%
separate(a, into = c("filename", "date", "time", "value"), sep = "\\s+")
# Separating columns by whitespace or gap
df <- df %>%
separate(a, into = c("filename", "date", "time", "value"), sep = "\\s+")
df
library(lubridate)
df %>%
slice(-1)
df %>%
slice(-1) %>%
transmute(
date = as_date(date),
txs = as.numeric(value)
)
df %>%
slice(-1) %>%
gsub('"', '', date)
df
# Creating the data frame:
df <- tibble(a = txs_list) %>%
unnest(a)
# Separating columns by whitespace or gap:
df <- df %>%
slice(-1) %>%
separate(a, into = c("filename", "date", "time", "value"), sep = "\\s+")
df
df %>%
transmute(
date = as_date(date),
txs = as.numeric(value)
)
df %>%
transmute(
date = dmy(date),
txs = as.numeric(value)
)
# Transforming some data:
df <- df %>%
transmute(
date = dmy(date),
txs = as.numeric(value)
)
df
# Grouping by month:
df_m <- df %>%
group_by(date) %>%
summarise(txs = sum(txs))
df_m
df_m <- df %>%
group_by(month = floor_date(date, "month")) %>%
summarize(txs = sum(txs))
df_m
shiny::runApp('BTCapp')
runApp('BTCapp')
# Reading "Blockchair Database Dumps" historic bitcoin transactions table:
blockchair <- read_html("https://gz.blockchair.com/bitcoin/transactions/")
# Selecting xpath of the transactions table:
txs_list <- blockchair %>%
html_element(xpath = "/html/body/pre") %>%
html_text()%>%
strsplit("\n")
# Creating the data frame:
df <- tibble(a = txs_list) %>%
unnest(a)
# Separating columns by whitespace or gap:
df <- df %>%
slice(-1) %>%
separate(a, into = c("filename", "date", "time", "value"), sep = "\\s+")
# Transforming some data:
df <- df %>%
transmute(
date = dmy(date),
txs = as.numeric(value)
)
# Grouping by month:
df_m <- df %>%
group_by(date) %>%
summarise(txs = sum(txs))
df_m <- df %>%
group_by(month = floor_date(date, "month")) %>%
summarize(txs = sum(txs))
View(df_m)
runApp('BTCapp')
# Reading "Blockchair Database Dumps" historic bitcoin transactions table:
blockchair <- read_html("https://gz.blockchair.com/bitcoin/transactions/")
# Selecting xpath of the transactions table:
txs_list <- blockchair %>%
html_element(xpath = "/html/body/pre") %>%
html_text()%>%
strsplit("\n")
# Creating the data frame:
df <- tibble(a = txs_list) %>%
unnest(a)
# Separating columns by whitespace or gap:
df <- df %>%
slice(-1) %>%
separate(a, into = c("filename", "date", "time", "value"), sep = "\\s+")
# Transforming some data:
df <- df %>%
transmute(
date = dmy(date),
txs = as.numeric(value)
)
# Grouping by month:
df_m <- df %>%
group_by(date) %>%
summarise(txs = sum(txs))
df_m <- df %>%
group_by(month = floor_date(date, "month")) %>%
summarize(txs = sum(txs))
df_m
View(df_m)
# Grouping by month:
df_m <- df %>%
group_by(date) %>%
summarise(txs = sum(txs))
df_m
df %>%
month = format_ISO8601(date, precision = "ym")
df %>%
mutate(month = format_ISO8601(date, precision = "ym"))
df %>%
mutate(month = format_ISO8601(date, precision = "ym")) %>%
group_by(month) %>%
summarize(txs = sum(txs))
df_m <- df %>%
mutate(month = format_ISO8601(date, precision = "ym")) %>%
group_by(month) %>%
summarize(txs = sum(txs))
View(df_m)
df_m <- df %>%
mutate(month = format_ISO8601(date, precision = "ym"))
View(df_m)
df %>%
mutate(month = format_ISO8601(date, precision = "ym")) %>%
group_by(month) %>%
summarize(txs = sum(txs))
View(df)
View(df_m)
# Creating the data frame:
df <- tibble(a = txs_list) %>%
unnest(a)
View(df)
